# utility_scopes
# http://github.com/yfactorial/utility_scopes/tree/master
# adds to the o-so-cool named_scope
# adds very useful named_scopes such as limit() ordered() etc
# sudo gem install yfactorial-utility_scopes --source http://gems.github.com

# scope_builder
# http://github.com/ryanb/scope-builder/tree/master
# Build up named scopes conditionally.
# config.gem 'ryanb-scope-builder', :lib => 'scope_builder', :source => 'http://gems.github.com'
# sudo gem install ryanb-scope-builder
# git clone git://github.com/ryanb/scope-builder.git
# rake gems:install


# roxy
# http://github.com/yfactorial/roxy/tree/master
# very cool proxy support for models see 
# http://ryandaigle.com/articles/2008/11/10/implement-ruby-proxy-objects-with-roxy for examples
# sudo gem install yfactorial-roxy --source http://gems.github.com

# flash-message-conductor
# cleans up flash messages for adding all types and displaying
# http://github.com/planetargon/flash-message-conductor/tree/master
# git://github.com/planetargon/flash-message-conductor.git

# kropper
# http://www.kolossus.com/category/kropper/
# very usefull cropping utility simialr to iChat's avatar cropping
# works out of the box with attachemnt_fu but easy modified to work from system call to convert with ImageMagick
# plugin: http://rubyforge.org/scm/?group_id=3936

# restful_authentication
# http://github.com/technoweenie/restful-authentication/tree/master
# the standard user and session login 
# plugin: git://github.com/technoweenie/restful-authentication.git

# capistrano
# http://www.capify.org/
# the standard deployment script generator with custom deploy recipes
# for restarting the server migrating new migrations, everything need to 
# get your app up and running in staging or production
# gem install capistrano
# capify . (in root rails dir to get started)

# paperclip
# http://github.com/thoughtbot/paperclip/tree/master
# the alternative to attachment_fu.  Advantage is that is it uses the same 
# model to store files so unlike attachment_fu you don't need two models
# such as users and users_files you can put the files directly in the users model
# plugin: git://github.com/thoughtbot/paperclip.git

# role_requirement
# http://github.com/timcharper/role_requirement/tree/master
# An easy way to add roles to users model for role based autherization
# plugin: git://github.com/timcharper/role_requirement.git

# nested_layouts
# http://github.com/amatsuda/nested_layouts/tree/master
# Plugin allows to specify outer layouts for particular layout thus creating nested layouts.
# ruby script/plugin install git://github.com/amatsuda/nested_layouts.git
